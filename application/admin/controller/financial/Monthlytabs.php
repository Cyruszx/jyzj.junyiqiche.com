<?php
/**
 * Created by PhpStorm.
 * User: glen9
 * Date: 2018/9/4
 * Time: 11:59
 */

namespace app\admin\controller\financial;

use app\common\controller\Backend;
use think\Db;
use app\common\library\Email;
class Monthlytabs extends Backend
{
    /**
     * @var null
     */
    protected $model = null;
    protected $noNeedRight = [
        'index', 'newcarMonthly', 'deductionsSucc',
        'commontMethod', 'sedRisk','edit','del','add',
        'hasBeenSent','downloadExcelTemplate','import'

    ];

    /**
     *
     */
    public function _initialize()
    {
         parent::_initialize(); // TODO: Change the autogenerated stub
        $this->model = new \app\admin\model\NewcarMonthly;

    }

    /**
     * @return \think\response\Json|void
     */
    public function index()
    {

        $this->loadlang('financial/monthlytabs');
        $this->view->assign([
            'did_total' => $this->model->where(['monthly_data'=>'failure','monthly_status'=>null])->count(),
            'has_total' => $this->model->where('monthly_status', 'has_been_sent')->count(),
            'dedu_total' => $this->model->where('monthly_data', 'success')->count()

        ]);
        return $this->view->fetch();
    }

    /**
     * 新车月供管理 （扣款失败）did_not_send
     * @return string
     * @throws \think\Exception
     */
    public function newcarMonthly()
    {
        $this->view->assign("monthlyDataList", $this->model->getMonthlyDataList());
        if ($this->request->isAjax()) {

            $result = $this->commontMethod('failure');
            return json($result);
        }
        return $this->view->fetch('index');
    }

    /**
     * 已发送  has_been_sent
     * @throws \Exception
     */
    public function hasBeenSent()
    {
        $this->view->assign("monthlyDataList", $this->model->getMonthlyDataList());
        if ($this->request->isAjax()) {

            $result = $this->commontMethod('has_been_sent');

            return json($result);
        }
        return $this->view->fetch('index');
    }

    /**
     * 扣款成功  deductions_succ
     * @return string|\think\response\Json
     * @throws \think\Exception
     *
     */
    public function deductionsSucc()
    {

        $this->view->assign("monthlyDataList", $this->model->getMonthlyDataList());
        if ($this->request->isAjax()) {

            $result = $this->commontMethod('success');

            return json($result);
        }
        return $this->view->fetch('index');
    }

    /**
     *
     * 封装查询
     * @param $status 扣款状态 failure=失败 success=成功  has_been_sent=已发送给风控
     * @return array|\think\response\Json
     * @throws \think\db\exception\DataNotFoundException
     * @throws \think\db\exception\ModelNotFoundException
     * @throws \think\exception\DbException
     */
    public function commontMethod($statusD)
    {
        //设置过滤方法
        $this->request->filter(['strip_tags']);
        //如果发送的来源是Selectpage，则转发到Selectpage
        if ($this->request->request('keyField')) {
            return $this->selectpage();
        }
        list($where, $sort, $order, $offset, $limit) = $this->buildparams('monthly_name');
        $total = $this->model
            ->where($where)
            ->where(function ($query) use ($statusD) {
                //如果等于扣款失败客户
                if ($statusD === 'failure') {
                    $query->where(['monthly_data' =>['=','failure'],'monthly_status'=>null]);
                } //如果等于已发送到风控
                if ($statusD === 'has_been_sent') {
                    $query->where(['monthly_status' => 'has_been_sent']);
                }
                if ($statusD === 'success') {
                    $query->where(['monthly_data' => 'success']);
                }
            })
            ->order($sort, $order)
            ->count();

        $list = $this->model
            ->where($where)
            ->where(function ($query) use ($statusD) {
                //如果等于扣款失败客户
                if ($statusD === 'failure') {
                    $query->where(['monthly_data' =>['=','failure'],'monthly_status'=>null]);
                } //如果等于已发送到风控
                if ($statusD ==='has_been_sent') {
                    $query->where(['monthly_status' => 'has_been_sent']);
                }
                if ($statusD === 'success') {
                    $query->where(['monthly_data' => 'success']);
                }
            })
            ->order($sort, $order)
            ->limit($offset, $limit)
            ->select();

        $list = collection($list)->toArray();
        $result = array("total" => $total, "rows" => $list);
        return $result;

    }

    /**
     * 发送到风控
     * @throws \Exception
     */
    public function sedRisk()
    {
        if ($this->request->isAjax()) {
            $id = input('post.');
            foreach ((array)$id['ids'] as $key => $value) {
                $new_params[] = ['id' => $value, 'monthly_status' => 'has_been_sent'];
            }
            if ($this->model->saveAll($new_params)) {
                //发送邮箱
                $data = send_monthly_to_risk();
                //接收人  风控审核  message7
                $receiver = DB::name('admin')->where('rule_message', 'message7')->value('email');

                $email = new Email;
                $result = $email
                    ->to($receiver)
                    ->subject($data['subject'])
                    ->message($data['message'])
                    ->send();
                    if($result){
                        $this->success();
                    }
                    else{
                        $this->error('邮箱通知失败');
                    }
            } else {
                $this->error();
            }
        }

    }


    /**新车下载导入模板
     * @throws \PHPExcel_Exception
     * @throws \PHPExcel_Reader_Exception
     * @throws \PHPExcel_Writer_Exception
     */
    public function downloadExcelTemplate()
    {
        // 新建一个excel对象 大神已经加入了PHPExcel 不用引了 直接用！
        $objPHPExcel = new \PHPExcel();  //在vendor目录下 \不能少 否则报错
        /*设置表头*/
        // $objPHPExcel->getActiveSheet()->mergeCells('A1:P1');//合并第一行的单元格
        // $objPHPExcel->getActiveSheet()->mergeCells('A2:P2');//合并第二行的单元格
        // $objPHPExcel->getActiveSheet()->getStyle('A1')->getAlignment()->setHorizontal(\PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
        // $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A1', '客户信息导入模板表');//标题
        // $objPHPExcel->getActiveSheet()->getRowDimension('1')->setRowHeight(30);      // 第一行的默认高度

        $myrow = 1;/*表头所需要行数的变量，方便以后修改*/
        /*表头数据填充*/
        $objPHPExcel->getActiveSheet()->getRowDimension('1')->setRowHeight(30);/*设置行高*/
        $objPHPExcel->setActiveSheetIndex(0)//设置一张sheet为活动表 添加表头信息
        // ->setCellValue('A' . $myrow, 'id')
        ->setCellValue('A' . $myrow, '账号')
            ->setCellValue('B' . $myrow, '姓名')
            ->setCellValue('C' . $myrow, '联系电话')
            ->setCellValue('D' . $myrow, '车型')
            ->setCellValue('E' . $myrow, '金额')
            ->setCellValue('F' . $myrow, '状态')
            ->setCellValue('G' . $myrow, '失败原因')
            ->setCellValue('H' . $myrow, '欠款月份')
            ->setCellValue('I' . $myrow, '公司')
            ->setCellValue('J' . $myrow, '车牌')
            ->setCellValue('K' . $myrow, '上户单位')
            ->setCellValue('L' . $myrow, '欠款月数')
            ->setCellValue('M' . $myrow, '备注');
        //浏览器交互 导出
        header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
        header('Content-Disposition: attachment;filename="月供信息导入模板表.xlsx"');
        header('Cache-Control: max-age=0');
        // If you're serving to IE 9, then the following may be needed
        header('Cache-Control: max-age=1');

        // If you're serving to IE over SSL, then the following may be needed
        header('Expires: Mon, 26 Jul 1997 05:00:00 GMT'); // Date in the past
        header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT'); // always modified
        header('Cache-Control: cache, must-revalidate'); // HTTP/1.1
        header('Pragma: public'); // HTTP/1.0
        $objWriter = \PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
        $objWriter->save('php://output');
        exit;
    }



    /**
     * 添加
     */
    public function add()
    {
        if ($this->request->isPost()) {
            $params = $this->request->post("row/a");
            if ($params) {
                if ($this->dataLimit && $this->dataLimitFieldAutoFill) {
                    $params[$this->dataLimitField] = $this->auth->id;
                }
                try {
                    //是否采用模型验证
                    if ($this->modelValidate) {
                        $name = str_replace("\\model\\", "\\validate\\", get_class($this->model));
                        $validate = is_bool($this->modelValidate) ? ($this->modelSceneValidate ? $name . '.add' : true) : $this->modelValidate;
                        $this->model->validate($validate);
                    }
                    $result = $this->model->allowField(true)->save($params);
                    if ($result !== false) {
                        $this->success();
                    } else {
                        $this->error($this->model->getError());
                    }
                } catch (\think\exception\PDOException $e) {
                    $this->error($e->getMessage());
                } catch (\think\Exception $e) {
                    $this->error($e->getMessage());
                }
            }
            $this->error(__('Parameter %s can not be empty', ''));
        }
        return $this->view->fetch();
    }

    /**
     * 编辑
     */
    public function edit($ids = NULL)
    {
        $row = $this->model->get($ids);
        if (!$row)
            $this->error(__('No Results were found'));
        $adminIds = $this->getDataLimitAdminIds();
        if (is_array($adminIds)) {
            if (!in_array($row[$this->dataLimitField], $adminIds)) {
                $this->error(__('You have no permission'));
            }
        }
        if ($this->request->isPost()) {
            $params = $this->request->post("row/a");
            if ($params) {
                try {
                    //是否采用模型验证
                    if ($this->modelValidate) {
                        $name = basename(str_replace('\\', '/', get_class($this->model)));
                        $validate = is_bool($this->modelValidate) ? ($this->modelSceneValidate ? $name . '.edit' : true) : $this->modelValidate;
                        $row->validate($validate);
                    }
                    $result = $row->allowField(true)->save($params);
                    if ($result !== false) {
                        $this->success();
                    } else {
                        $this->error($row->getError());
                    }
                } catch (\think\exception\PDOException $e) {
                    $this->error($e->getMessage());
                } catch (\think\Exception $e) {
                    $this->error($e->getMessage());
                }
            }
            $this->error(__('Parameter %s can not be empty', ''));
        }
        $this->view->assign("row", $row);
        return $this->view->fetch();
    }

    /**
     * 删除
     */
    public function del($ids = "")
    {
        if ($ids) {
            $pk = $this->model->getPk();
            $adminIds = $this->getDataLimitAdminIds();
            if (is_array($adminIds)) {
                $count = $this->model->where($this->dataLimitField, 'in', $adminIds);
            }
            $list = $this->model->where($pk, 'in', $ids)->select();
            $count = 0;
            foreach ($list as $k => $v) {
                $count += $v->delete();
            }
            if ($count) {
                $this->success();
            } else {
                $this->error(__('No rows were deleted'));
            }
        }
        $this->error(__('Parameter %s can not be empty', 'ids'));
    }

    /**导入月供模板
     * @throws \PHPExcel_Exception
     * @throws \PHPExcel_Reader_Exception
     * @throws \think\db\exception\BindParamException
     * @throws \think\exception\PDOException
     */
    public function import () {
        $file = $this->request->request('file');
        if (!$file) {
            $this->error(__('Parameter %s can not be empty', 'file'));
        }
        $filePath = ROOT_PATH . DS . 'public' . DS . $file;
        if (!is_file($filePath)) {
            $this->error(__('No results were found'));
        }
        $PHPReader = new \PHPExcel_Reader_Excel2007();
        if (!$PHPReader->canRead($filePath)) {
            $PHPReader = new \PHPExcel_Reader_Excel5();
            if (!$PHPReader->canRead($filePath)) {
                $PHPReader = new \PHPExcel_Reader_CSV();
                if (!$PHPReader->canRead($filePath)) {
                    $this->error(__('Unknown data format'));
                }
            }
        }

        //导入文件首行类型,默认是注释,如果需要使用字段名称请使用name
        $importHeadType = isset($this->importHeadType) ? $this->importHeadType : 'comment';

        $table = $this->model->getQuery()->getTable();
        $database = \think\Config::get('database.database');
        $fieldArr = [];
        $list = db()->query("SELECT COLUMN_NAME,COLUMN_COMMENT FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ? AND TABLE_SCHEMA = ?", [$table, $database]);
        foreach ($list as $k => $v) {
            if ($importHeadType == 'comment') {
                $fieldArr[$v['COLUMN_COMMENT']] = $v['COLUMN_NAME'];
            } else {
                $fieldArr[$v['COLUMN_NAME']] = $v['COLUMN_NAME'];
            }
        }

        $PHPExcel = $PHPReader->load($filePath); //加载文件
        $currentSheet = $PHPExcel->getSheet(0);  //读取文件中的第一个工作表
        $allColumn = $currentSheet->getHighestDataColumn(); //取得最大的列号
        $allRow = $currentSheet->getHighestRow(); //取得一共有多少行
        $maxColumnNumber = \PHPExcel_Cell::columnIndexFromString($allColumn);
        for ($currentRow = 1; $currentRow <= 1; $currentRow++) {
            for ($currentColumn = 0; $currentColumn < $maxColumnNumber; $currentColumn++) {
                $val = $currentSheet->getCellByColumnAndRow($currentColumn, $currentRow)->getValue();
                $fields[] = $val;
            }
        }
        $insert = [];
        for ($currentRow = 2; $currentRow <= $allRow; $currentRow++) {
            $values = [];
            for ($currentColumn = 0; $currentColumn < $maxColumnNumber; $currentColumn++) {
                $val = $currentSheet->getCellByColumnAndRow($currentColumn, $currentRow)->getValue();
                $values[] = is_null($val) ? '' : $val;
            }
            $row = [];
            $temp = array_combine($fields, $values);
            foreach ($temp as $k => $v) {
                if (isset($fieldArr[$k]) && $k !== '') {
                    $row[$fieldArr[$k]] = $v;
                }
            }
            if ($row) {
                $insert[] = $row;
                foreach ($insert as $key=>$value){
                    $insert[$key]['monthly_in_arrears_time'] = str_replace('.','-',$value['monthly_in_arrears_time']);
//                    $insert[$key]['monthly_status']  = 'did_not_send';
                }
            }
        }
        if (!$insert) {
            $this->error(__('No rows were updated'));
        }
        try {
            $this->model->saveAll($insert);

        } catch (\think\exception\PDOException $exception) {
            $this->error($exception->getMessage());
        } catch (\Exception $e) {
            $this->error($e->getMessage());
        }

        $this->success();
    }
    /**
     * 租车模板下载
     *
     * @throws \PHPExcel_Exception
     * @throws \PHPExcel_Reader_Exception
     * @throws \PHPExcel_Writer_Exception
     */
    public function rentalcarDownloadExcelTemplate()
    {
        // 新建一个excel对象 大神已经加入了PHPExcel 不用引了 直接用！
        $objPHPExcel = new \PHPExcel();  //在vendor目录下 \不能少 否则报错
        /*设置表头*/
        // $objPHPExcel->getActiveSheet()->mergeCells('A1:P1');//合并第一行的单元格
        // $objPHPExcel->getActiveSheet()->mergeCells('A2:P2');//合并第二行的单元格
        // $objPHPExcel->getActiveSheet()->getStyle('A1')->getAlignment()->setHorizontal(\PHPExcel_Style_Alignment::HORIZONTAL_CENTER);
        // $objPHPExcel->setActiveSheetIndex(0)->setCellValue('A1', '客户信息导入模板表');//标题
        // $objPHPExcel->getActiveSheet()->getRowDimension('1')->setRowHeight(30);      // 第一行的默认高度

        $myrow = 1;/*表头所需要行数的变量，方便以后修改*/
        /*表头数据填充*/
        $objPHPExcel->getActiveSheet()->getRowDimension('1')->setRowHeight(30);/*设置行高*/
        $objPHPExcel->setActiveSheetIndex(0)//设置一张sheet为活动表 添加表头信息
        // ->setCellValue('A' . $myrow, 'id')
        ->setCellValue('A' . $myrow, '账号')
            ->setCellValue('B' . $myrow, '公司')
            ->setCellValue('C' . $myrow, '姓名')
            ->setCellValue('D' . $myrow, '联系电话')
            ->setCellValue('E' . $myrow, '车辆来源')
            ->setCellValue('F' . $myrow, '车型')
            ->setCellValue('G' . $myrow, '车牌')
            ->setCellValue('H' . $myrow, '押金')
            ->setCellValue('I' . $myrow, '欠租期间')
            ->setCellValue('J' . $myrow, '金额')
            ->setCellValue('K' . $myrow, '备注');
        //浏览器交互 导出
        header('Content-Type: application/vnd.openxmlformats-officedocument.spreadsheetml.sheet');
        header('Content-Disposition: attachment;filename="月租欠款信息导入模板表.xlsx"');
        header('Cache-Control: max-age=0');
        // If you're serving to IE 9, then the following may be needed
        header('Cache-Control: max-age=1');

        // If you're serving to IE over SSL, then the following may be needed
        header('Expires: Mon, 26 Jul 1997 05:00:00 GMT'); // Date in the past
        header('Last-Modified: ' . gmdate('D, d M Y H:i:s') . ' GMT'); // always modified
        header('Cache-Control: cache, must-revalidate'); // HTTP/1.1
        header('Pragma: public'); // HTTP/1.0
        $objWriter = \PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
        $objWriter->save('php://output');
        exit;
    }
}